name: Django CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black
          pip install -r requirements.txt

      - name: Run Ruff linter
        run: |
          ruff check .

      - name: Check formatting with Black
        run: |
          black --check --diff .

  test:
    name: Tests & Coverage
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install pytest-cov

      - name: Run tests with SQLite
        run: |
          # Configurar SQLite para testes
          export DJANGO_SETTINGS_MODULE=core.settings          
          export SECRET_KEY=testing-key
          export DB_DEBUG=True
          # Fazendo migrações
          python manage.py migrate
          # Executar testes com coverage
          make coverage

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  security-check:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Check for security issues
        run: |
          bandit -r . --exclude "./venv,./tests"

      - name: Check dependencies for vulnerabilities
        run: |
          safety check -r requirements.txt
